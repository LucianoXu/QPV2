
Def Peq := [|00>] \vee [|11>].

Pause. // Move this command around to pause at different stages.

// the program of noise
Def Noise := Prog 
	(X[q1] [\oplus 0.5] (X[q2] [\oplus 0.5] (X[q3] [\oplus 0.5] skip))).

Def Pe := 0.5 [|1000> + |0111>] \vee 0.5 [|0100> + |1011>] \vee 0.5 [|0010> + |1101>] \vee 0.5 [|0000> + |1111>].

Def Rep3 := Prog < Pe[q1 q2 q3 a], 0.5 [|0000> + |1111>][q1 q2 q3 a] >.

Refine ErrCorr : < 0.5 [|0000> + |1111>][q1 q2 q3 a], 0.5 [|0000> + |1111>][q1 q2 q3 a] >.
	Step Seq Pe[q1 q2 q3 a].

	Step proc Noise.
	Step proc Rep3.

	// detect and recover
	Step If Peq[q1 q2].
	
	Step If Peq[q2 q3].

	WeakenPre (0.5 [|0000> + |1111>])[q1 q2 q3 a]. Step skip.
	WeakenPre (0.5 [|0010> + |1101>])[q1 q2 q3 a]. Step X[q3].

	Step If Peq[q2 q3].

	WeakenPre (0.5 [|1000> + |0111>])[q1 q2 q3 a]. Step X[q1].
	WeakenPre (0.5 [|0100> + |1011>])[q1 q2 q3 a]. Step X[q2].
End.

Def Rep3Extr := Extract Rep3.
Show Rep3Extr.

Def noisy := [[proc Noise]]([0.6|000> + 0.8|111>][q1 q2 q3]).
Def recovered := [[proc Rep3]](IQOPT noisy).
Eval recovered.