
Def Peq := [|00>] \vee [|11>].

Def Pe0 := 0.5 [|0000> + |1111>]. Def Pe1 := 0.5 [|1000> + |0111>].
Def Pe2 := 0.5 [|0100> + |1011>]. Def Pe3 := 0.5 [|0010> + |1101>].

Def Pe := Pe0 \vee Pe1 \vee Pe2 \vee Pe3.

Pause. // Move this command around to pause at different stages.

Refine Rep : < Pe[q1 q2 q3 a], Pe0[q1 q2 q3 a] >.
	
	// detect and recover
	Step If Peq[q1 q2].
	
	Step If Peq[q2 q3].

	WeakenPre Pe0[q1 q2 q3 a]. Pause. Step skip.
	WeakenPre Pe3[q1 q2 q3 a]. Step X[q3].

	Step If Peq[q2 q3].

	WeakenPre Pe1[q1 q2 q3 a]. Step X[q1].
	WeakenPre Pe2[q1 q2 q3 a]. Step X[q2].
End.

Def RepExtr := Extract Rep.
Show RepExtr.

Def Noise := Prog 
	(X[q1] [\oplus 0.5] (X[q2] [\oplus 0.5] (X[q3] [\oplus 0.5] skip))).

Def noisy := [[proc Noise]]([0.6|000> + 0.8|111>][q1 q2 q3]).
Def recovered := [[proc RepExtr]](IQOPT noisy).
Eval recovered.